version: "3.3"
services:


  traefik:
    image: "traefik:v2.8"
    container_name: "traefik"
    restart: always
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--api.debug=true"
      - "--providers.docker=true"
      - "--providers.docker.network=cas_nft_marketplace_network"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.mongodb.address=:27017"
      - "--serversTransport.forwardingTimeouts.dialTimeout=120s"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
      - "27017:27017"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - cas_nft_marketplace_network


  deip-substrate-node:
    image: deipworld/appchain-deip:latest
    container_name: deip-substrate-node
    restart: always
    command: appchain-deip --dev --ws-external --rpc-external --rpc-methods=Unsafe --rpc-cors=all --base-path=/var/lib/deipd
    expose:
      - "9944"
      - "9933"
    ports:
      - "127.0.0.1:9944:9944"
      - "127.0.0.1:9933:9933"
    volumes:
      - cas_nft_marketplace_chain_storage:/var/lib/deipd
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: 2048M
        reservations:
          memory: 1024M
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node_ws.rule=Host(`local.appchain.ws.casimir.one`)"
      - "traefik.http.routers.node_ws.service=node_ws"
      - "traefik.http.services.node_ws.loadbalancer.server.port=9944"
      
      - "traefik.http.routers.node_http.rule=Host(`local.appchain.http.casimir.one`)"
      - "traefik.http.routers.node_http.service=node_http"
      - "traefik.http.services.node_http.loadbalancer.server.port=9933"
    networks:
      - cas_nft_marketplace_network


  deip-event-proxy:
    image: "deipworld/event-proxy"
    container_name: deip-event-proxy
    restart: always
    command: "event-proxy --config=/event-proxy.toml"
    environment:
      RUST_LOG: "error,librdkafka=error,rdkafka::client=error"
    volumes:
      - "./event-proxy.toml:/event-proxy.toml"
    depends_on:
      - kafka
      - deip-substrate-node
    networks: 
      - cas_nft_marketplace_network


  cas-nft-marketplace-web-server:
    image: deipworld/casimir-nft-marketplace-web-server:latest
    container_name: cas-nft-marketplace-web-server
    restart: always
    depends_on:
      - deip-substrate-node
      - deip-event-proxy
      - cas-nft-marketplace-storage
      - kafka
    links:
      - deip-substrate-node
      - deip-event-proxy
      - cas-nft-marketplace-storage
      - kafka
    expose:
      - "80"
    ports:
      - "127.0.0.1:8081:80"
    environment:
      NODE_ENV: development
      PROTOCOL: 2
      PORT: 80
      DEIP_FULL_NODE_URL: http://deip-substrate-node:9933
      DEIP_MONGO_STORAGE_CONNECTION_URL: mongodb://cas-nft-marketplace-storage:27017/casimir-storage?authSource=admin
      CORE_ASSET: '{ "id": 0, "symbol": "DEIP", "precision": 18 }'
      CHAIN_BLOCK_INTERVAL_MILLIS: 6000
      TENANT: "6561845613164402145092105428472817005070"
      TENANT_PRIV_KEY: "1d24d7eda9803457dcea233872d513f4468d41b7a8b77555c161be1d1917330c"
      TENANT_PORTAL: '{"privKey":"1265fe9c39e665908f2d6fda3f0371d34de255e4420eb0aaa2907a8d80836d99","pubKey":"22688b484f3e0dde55bd52221fd9ba806c8af5388e02543e14fbf3a639d4d825"}'
      TENANT_HOT_WALLET: '{"privKey":"38b6bf99e4b06e64cafeeedf1f418f8f03b472e14ece7f5e5cb4d9aa9e6caef7","daoId":"20d1c50067827d1ba447d1be4a4d5129fb0583ed"}'
      TENANT_FILE_STORAGE_TYPE: 1
      QUEUE_SERVICE: kafka
      KAFKA_CLIENT_ID: nft-marketplace-client
      KAFKA_BROKER_URLS: '["kafka:9092"]'
      KAFKA_APP_GROUP_ID: nft-marketplace-app-group
      KAFKA_CHAIN_GROUP_ID: nft-marketplace-chain-group
      KAFKA_APP_TOPIC: nft-marketplace-app-topic
      KAFKA_CHAIN_TOPIC: blockchain
      SIG_SEED: quickbrownfoxjumpsoverthelazydog
      JWT_SECRET: shhhhhhhhhhh!!!
    volumes:
      - cas_nft_marketplace_file_storage:/usr/src/app/files
      - cas_nft_marketplace_log_storage:/usr/src/app/logs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webserver_http.rule=Host(`local.webserver.http.casimir.one`)"
      - "traefik.http.routers.webserver_http.entrypoints=web"
      - "traefik.http.routers.webserver_http.service=webserver_http"
      - "traefik.http.services.webserver_http.loadbalancer.server.port=80"
    networks: 
      - cas_nft_marketplace_network


  cas-nft-marketplace-web-client:
    image: deipworld/casimir-nft-marketplace-web-client:latest
    container_name: cas-nft-marketplace-web-client
    restart: always
    expose:
      - "80"
    ports:
      - "127.0.0.1:8082:80"
    environment:
      NODE_ENV: development
      PROTOCOL: 2
      TENANT: "6561845613164402145092105428472817005070"
      SIG_SEED: "quickbrownfoxjumpsoverthelazydog"
      # web server ws and http
      DEIP_SERVER_URL: http://local.webserver.http.casimir.one
      DEIP_WEB_SOCKET_URL: ws://local.webserver.http.casimir.one
      DEIP_WEB_SOCKET_TIMEOUT: 120000
      # chain node
      DEIP_FULL_NODE_URL: ws://local.appchain.ws.casimir.one
      # wallet
      WALLET_URL: http://local.wallet.casimir.one
      TENANT_HOT_WALLET_DAO_ID: '20d1c50067827d1ba447d1be4a4d5129fb0583ed'
      CORE_ASSET: '{ "id": 0, "symbol": "DEIP", "precision": 18 }'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webclient.rule=Host(`local.casimir.one`)"
      - "traefik.http.routers.webclient.service=webclient"
      - "traefik.http.services.webclient.loadbalancer.server.port=80"
    networks: 
      - cas_nft_marketplace_network


  cas-nft-marketplace-storage:
    image: mongo:3.6.5
    container_name: cas-nft-marketplace-storage
    restart: always
    expose:
      - "27017"
    volumes: 
      - cas_nft_marketplace_offchain_storage:/data/db
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.storage.entrypoints=mongodb"
      - "traefik.tcp.routers.storage.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.storage.tls=false"
      - "traefik.tcp.services.storage.loadbalancer.server.port=27017"
      - "traefik.tcp.routers.storage.service=storage"
    networks: 
      - cas_nft_marketplace_network


  zookeeper:
    image: bitnami/zookeeper:3.7
    container_name: zookeeper
    restart: always
    expose:
      - "2181"
    ports:
      - "127.0.0.1:2181:2181"
    volumes:
      - "cas_nft_marketplace_zookeeper_storage:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks: 
      - cas_nft_marketplace_network


  kafka:
    image: bitnami/kafka:2
    container_name: kafka
    restart: always
    expose:
      - "9092"
      - "9093"
    ports:
      - "127.0.0.1:9093:9093"
    volumes:
      - "cas_nft_marketplace_kafka_storage:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://127.0.0.1:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
    depends_on:
      - zookeeper
    networks: 
      - cas_nft_marketplace_network


  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    restart: always
    expose:
      - "8080"
    ports:
      - "127.0.0.1:8083:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=casimir
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kafkaui.rule=Host(`local.kafka.casimir.one`)"
      - "traefik.http.routers.kafkaui.service=kafkaui"
      - "traefik.http.services.kafkaui.loadbalancer.server.port=8080"
    networks: 
      - cas_nft_marketplace_network


  deip-web-wallet-client:
    # image: deipworld/deip-web-wallet:latest
    image: deipworld/local-deip-web-wallet:latest
    container_name: deip-web-wallet-client
    restart: always
    expose:
      - "8080"
    ports:
      - "127.0.0.1:8084:8080"
   #environment:
      # Envs are injected to static content :(
      #DW_API_URL: http://local.wallet.webserver.casimir.one
      #DW_NETWORK: ws://local.appchain.ws.casimir.one
      #DW_PROTOCOL: 2
      #DW_CORE_ASSET: '{ "id": 0, "symbol": "DEIP", "precision": 18 }'
      #DW_ACCOUNT_DEFAULT_FUNDING_AMOUNT: 1000000000000000000000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webwallet.rule=Host(`local.wallet.casimir.one`)"
      - "traefik.http.routers.webwallet.service=webwallet"
      - "traefik.http.services.webwallet.loadbalancer.server.port=8080"
    networks: 
      - cas_nft_marketplace_network


  deip-web-wallet-server:
    image: deipworld/deip-web-wallet-server:latest
    container_name: deip-web-wallet-server
    restart: always
    depends_on:
      - deip-substrate-node
      - deip-event-proxy
      - cas-nft-marketplace-storage
      - kafka
    links:
      - deip-substrate-node
      - deip-event-proxy
      - cas-nft-marketplace-storage
      - kafka
    expose:
      - "80"
    ports:
      - "127.0.0.1:8085:80"
    environment:
      PORT: 80
      MODE: development
      DW_PROTOCOL: 2
      DW_DB_URL: mongodb://cas-nft-marketplace-storage:27017/deip-wallet?authSource=admin
      DW_DEIP_FULL_NODE_URL: http://deip-substrate-node:9933
      DW_CORE_ASSET: '{ "id": 0, "symbol": "DEIP", "precision": 18 }'
      DW_DEIP_APPCHAIN_MILLISECS_PER_BLOCK: 6000
      DW_KAFKA_CLIENT_ID: deip-wallet-client
      DW_KAFKA_BROKER_URLS: '["kafka:9092"]'
      DW_KAFKA_CHAIN_GROUP_ID: deip-wallet-chain-group
      DW_KAFKA_CHAIN_TOPIC: blockchain
      DW_SENTRY_DSN: http://78783252fab34a6097e4016782548800@o1270391.ingest.sentry.io/6465321
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webwalletserver.rule=Host(`local.wallet.webserver.casimir.one`)"
      - "traefik.http.routers.webwalletserver.entrypoints=web"
      - "traefik.http.routers.webwalletserver.service=webwalletserver"
      - "traefik.http.services.webwalletserver.loadbalancer.server.port=80"
    networks: 
      - cas_nft_marketplace_network


volumes:
  cas_nft_marketplace_chain_storage:
    external: true
  cas_nft_marketplace_offchain_storage:
    external: true
  cas_nft_marketplace_file_storage:
    external: true
  cas_nft_marketplace_log_storage:
    external: true
  cas_nft_marketplace_zookeeper_storage:
    external: true
  cas_nft_marketplace_kafka_storage:
    external: true


networks:
  cas_nft_marketplace_network:
    external: true